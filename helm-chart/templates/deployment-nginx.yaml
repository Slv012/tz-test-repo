apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ include "common.namespace" . }}
  name: {{ .Values.nginx.name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nginx.replica }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.nginx.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.nginx.name }}
    spec:
      containers:
        - name: {{ .Values.nginx.container.name }}
          image: "{{ .Values.nginx.container.image }}:{{ .Values.nginx.container.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.nginx.targetPort }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          resources:
            requests:
              memory: {{ .Values.nginx.resources.memory }}
              cpu: {{ .Values.nginx.resources.cpu }}
            limits:
              memory: {{ .Values.nginx.resources.memory }}
              cpu: {{ .Values.nginx.resources.cpu }}
      livenessProbe:
        httpGet:
          path: /
          port: {{ .Values.nginx.port }}
        initialDelaySeconds: 3
        periodSeconds: 10
      readinessProbe:
        httpGet:
          path: /
          port: {{ .Values.nginx.port }}
        initialDelaySeconds: 1
        periodSeconds: 5
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - {{ .Values.symfony.name }}
            topologyKey: "kubernetes.io/hostname"